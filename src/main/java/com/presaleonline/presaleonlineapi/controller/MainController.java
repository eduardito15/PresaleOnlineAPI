package com.presaleonline.presaleonlineapi.controller;


import com.presaleonline.presaleonlineapi.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import com.presaleonline.presaleonlineapi.domain.*;
import com.presaleonline.presaleonlineapi.repository.HeroRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/presaleonline" , method={RequestMethod.OPTIONS,RequestMethod.GET}) // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	
	@Autowired
	private HeroRepository heroRepository;
	
	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	
	@CrossOrigin(origins = "http://localhost:4200")
	@GetMapping(path="/heroes/all")
	public @ResponseBody Iterable<Hero> getAllHeroes() {
		// This returns a JSON or XML with the users
		return heroRepository.findAll();
	}
	
	@CrossOrigin(origins = "http://localhost:4200")
	@GetMapping(path="/hero")
	public @ResponseBody Hero getHeroById(@RequestParam Long id) {
		// This returns a JSON or XML with the users
		return heroRepository.findOne(id);
	}
	
	@CrossOrigin(origins = "http://localhost:4200")
	@PostMapping(path="/hero/update")
	public @ResponseBody Hero updateHero(@RequestBody Hero hero) {
		// This returns a JSON or XML with the users
		return heroRepository.save(hero);
	}
	
	@CrossOrigin(origins = "http://localhost:4200")
	@PostMapping(path="/hero/create")
	public @ResponseBody Hero createHero(@RequestBody String heroName) {
		// This returns a JSON or XML with the users
		Hero h = new Hero();
		h.setName(heroName);
		return heroRepository.save(h);
	}
	
	@CrossOrigin(origins = "http://localhost:4200")
	@DeleteMapping(path="/hero/delete")
	public @ResponseBody ResponseEntity<HttpStatus> deleteHero(@RequestParam Long id) {
		// This returns a JSON or XML with the users
		heroRepository.delete(id);
		return ResponseEntity.ok(HttpStatus.ACCEPTED);
	}
	
	@CrossOrigin(origins = "http://localhost:4200")
	@GetMapping(path="/heroByName")
	public @ResponseBody Iterable<Hero> getHerosByName(@RequestParam String nameToSearch) {
		// This returns a JSON or XML with the users
		return heroRepository.findByName(nameToSearch);
	}
	
	
}
